var MesonTo;(()=>{var t={138:t=>{t.exports=class{constructor(t){this._={},Object.defineProperty(this._,"window",{value:t,writable:!1}),this._popup=null,this._promise=null,this._callback=null}open(t){return this._popup&&!this._popup.closed?(this._popup.focus(),this._promise):(this._promise=new Promise((e=>{this._popup=window.open(`https://meson.to/${t}`,"Transfer to Fluidity","width=360,height=640");const s=setInterval((()=>{this._popup&&this._popup.closed&&(clearInterval(s),this._popup=null,e())}),500)})),this._promise)}onCompleted(t){if(this._callback)throw new Error("meson2.onCompleted listener already registered");if("function"!=typeof t)throw new Error("callback is not a valid function");return this._callback=e=>{e.data&&"meson.to"===e.data.source&&t(e.data.data)},this._.window.addEventListener("message",this._callback),{dispose:()=>{this._.window.removeEventListener("message",this._callback),this._callback=null}}}}}},e={},s=function s(o){var i=e[o];if(void 0!==i)return i.exports;var r=e[o]={exports:{}};return t[o](r,r.exports,s),r.exports}(138);MesonTo=s})();