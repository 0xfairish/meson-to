var MesonTo;(()=>{var o={138:o=>{o.exports=class{constructor(o){this._={},Object.defineProperty(this._,"window",{value:o,writable:!1}),this._onWindowMsg=null,this._popup=null,this._promise=null}open(o){return this._popup&&!this._popup.closed?(this._popup.focus(),this._promise):(this._promise=new Promise((t=>{this._popup=window.open(`https://meson.to/${o}`,"Transfer to Fluidity","width=360,height=640");const s=setInterval((()=>{this._popup&&this._popup.closed&&(clearInterval(s),this._popup=null,t())}),500)})),this._promise)}onCompleted(o){if(this._onWindowMsg)throw new Error("meson2.onCompleted listener already registered");if("function"!=typeof o)throw new Error("callback is not a valid function");this._onWindowMsg=this._.window.onmessage,this._.window.onmessage=t=>{t.data&&"meson.to"===t.data.source?o(t.data.data):this._onWindowMsg&&this._onWindowMsg(t)}}}}},t={},s=function s(e){var i=t[e];if(void 0!==i)return i.exports;var n=t[e]={exports:{}};return o[e](n,n.exports,s),n.exports}(138);MesonTo=s})();